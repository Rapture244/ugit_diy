# ==================================================================================================================== #
#                                                         PYTEST                                                       #
# ==================================================================================================================== #
# Core configuration for pytest test discovery, import resolution, output formatting, and strictness.
# Mirrors the style and rigor of our Pyright and Ruff configs. Placed at project root.

[pytest]

# -------------------------------------------------------------------------------------------------------------------- #
# TEST DISCOVERY
# -------------------------------------------------------------------------------------------------------------------- #
# Explicitly tell pytest where to find tests and how to resolve imports in a src/ layout.
# This prevents `ModuleNotFoundError` when importing from the main package in tests.
testpaths = tests
pythonpath = src

# Auto-discover test files matching these patterns (default: test_*.py and *_test.py).
# Set explicitly for clarity and consistency with Ruff’s pytest-style rules.
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# -------------------------------------------------------------------------------------------------------------------- #
# BEHAVIOR & OUTPUT
# -------------------------------------------------------------------------------------------------------------------- #
# Fail fast if any test fails (mirrors `-x` in pre-commit), and show short test summary info (`-ra`).
# Add `-q` for quiet output in CI, while still preserving meaningful info locally.
addopts = -ra -q

# Require pytest >= 8.0 for compatibility with our pinned dev dependencies.
minversion = 8.0

# -------------------------------------------------------------------------------------------------------------------- #
# STRICTNESS & CLEANLINESS
# -------------------------------------------------------------------------------------------------------------------- #
# Turn warnings into errors to catch deprecated or unsafe patterns early.
# (Can be relaxed to "default" if too strict for rapid iteration.)
filterwarnings =
    error

# Fail if any unknown markers are used (helps catch typos or unregistered markers early).
# You can register custom markers here as your suite grows.
markers =
    slow: marks tests as slow (skipped by default unless -m slow is specified)
    cli: marks CLI-related tests

# -------------------------------------------------------------------------------------------------------------------- #
# COVERAGE (Optional)
# -------------------------------------------------------------------------------------------------------------------- #
# If using pytest-cov, these settings keep reporting consistent with [tool.coverage] in pyproject.toml.
# They’re ignored if pytest-cov isn’t installed.
# NOTE: We measure only the package source (not tests or deps).
# coverage_run_source = ugit_diy
# coverage_fail_under = 85

# -------------------------------------------------------------------------------------------------------------------- #
# MISCELLANEOUS
# -------------------------------------------------------------------------------------------------------------------- #
# Colorize output even in non-interactive CI environments.
console_output_style = count
